 SELECT * FROM STUDENT;
 SELECT * FROM ENROL;
 SELECT * FROM SUBJECT;
 
 --no1. 학생(student) 테이블과 수강(enrol) 테이블을 natural join 하라
SELECT *
FROM STUDENT NATURAL JOIN ENROL;

 --no2. 학번, 이름, 과목이름, 점수를 검색하라.(equi join)
SELECT STUDENT.STU_NO, STU_NAME, SUB_NAME, ENR_GRADE 
FROM STUDENT, ENROL, SUBJECT
WHERE STUDENT.STU_NO = ENROL.STU_NO AND ENROL.SUB_NO = SUBJECT.SUB_NO;
 
 --no3. 과목이름과 학번, 점수를 검색하라.(natural join)
SELECT SUB_NAME, STU_NO, ENR_GRADE
FROM SUBJECT NATURAL JOIN ENROL;
 
 --no4. 과목이름과 학번, 점수를 검색하라.(join ~ using)
SELECT SUB_NAME, STU_NO, ENR_GRADE
FROM ENROL JOIN SUBJECT USING(SUB_NO);
 
 --no5. 점수가 70점 이상인 학생 이름을 검색하라.(equi join)
SELECT STU_NAME
FROM STUDENT, ENROL,SUBJECT
WHERE STUDENT.STU_NO = ENROL.STU_NO AND ENROL.SUB_NO = SUBJECT.SUB_NO
AND ENR_GRADE >= 70;
 
 --no6. 점수가 60점 이상인 학생 이름을 검색하라.(join ~ using)
SELECT STU_NAME
FROM STUDENT JOIN ENROL USING(STU_NO) JOIN SUBJECT USING(SUB_NO)
WHERE ENR_GRADE >= 60;
 
 --no7. 점수가 70점 이하인 학생 이름을 검색하라.(natural join)
SELECT STU_NAME
FROM STUDENT NATURAL JOIN ENROL NATURAL JOIN SUBJECT
WHERE ENR_GRADE <= 70;
 
 --no8. 김인중 학생이 수강하는 과목이름과 강의 교수를 검색하라.(equi join)
SELECT SUB_NAME, SUB_PROF
FROM STUDENT, ENROL,SUBJECT
WHERE STUDENT.STU_NO = ENROL.STU_NO AND ENROL.SUB_NO = SUBJECT.SUB_NO
AND STUDENT.STU_NO = (SELECT STU_NO
                     FROM STUDENT
                     WHERE STU_NAME = '김인중');
 
 --no9. 김인중 학생이 수강하는 과목이름과 강의 교수를 검색하라.(natural join)
SELECT SUB_NAME, SUB_PROF
FROM STUDENT NATURAL JOIN ENROL NATURAL JOIN SUBJECT
WHERE STU_NO = (SELECT STU_NO
                     FROM STUDENT
                     WHERE STU_NAME = '김인중');
 
 --no10. 김인중 학생이 수강하는 과목이름과 강의 교수를 검색하라.(join ~ using)
SELECT SUB_NAME, SUB_PROF
FROM STUDENT JOIN ENROL USING(STU_NO) JOIN SUBJECT USING(SUB_NO)
WHERE STU_NO = (SELECT STU_NO
                     FROM STUDENT
                     WHERE STU_NAME = '김인중');
 
 --no11. 강종영 교수가 강의하는 과목을 수강하는 학생의 이름을 검색하라.
SELECT STUDENT.STU_NAME
FROM STUDENT, ENROL, SUBJECT
WHERE STUDENT.STU_NO = ENROL.STU_NO AND ENROL.SUB_NO = SUBJECT.SUB_NO
AND SUB_PROF = '강종영';
 
 --no12. 컴퓨터개론을 수강하는 학생들의 학번과 이름을 검색하라.
SELECT STUDENT.STU_NO,STU_NAME
FROM STUDENT, ENROL, SUBJECT
WHERE STUDENT.STU_NO = ENROL.STU_NO AND ENROL.SUB_NO = SUBJECT.SUB_NO
AND SUB_NAME = '컴퓨터개론';
 
 --no13. 시스템분석설계, 소프트웨어공학을 수강하는 학생들의 학번, 이름을 학번 순으로 검색하라.
SELECT STUDENT.STU_NO,STU_NAME
FROM STUDENT, ENROL, SUBJECT
WHERE STUDENT.STU_NO = ENROL.STU_NO AND ENROL.SUB_NO = SUBJECT.SUB_NO
AND ( SUB_NAME = '시스템분석설계' OR SUB_NAME = '소프트웨어공학');
 
 --no14. 과목이 1학년 과목이거나, 컴퓨터정보과에 개설된 과목일 경우 그 과목들을 수강하는 학생들의 학번과 이름을 검색하라.
SELECT STUDENT.STU_NO,STU_NAME
FROM STUDENT, ENROL, SUBJECT
WHERE STUDENT.STU_NO = ENROL.STU_NO AND ENROL.SUB_NO = SUBJECT.SUB_NO
AND ( SUB_GRADE = 1 OR SUB_DEPT = '컴퓨터정보');
 
 --no15. 기계공작법, 기초전자실험을 수강하는 학생들의 학번, 이름을 학번 순으로 검색하라(natural join).
SELECT STU_NO,STU_NAME
FROM STUDENT NATURAL JOIN ENROL NATURAL JOIN SUBJECT
WHERE SUB_NAME = '기계공작법' OR SUB_NAME = '기초전자실험';

 --no16. 김태영 교수, 김유석 교수가 강의하는 과목을 수강하는 학생의 학번을 검색하라(join ~ using).
 SELECT STU_NO,STU_NAME
 FROM STUDENT JOIN ENROL USING(STU_NO) JOIN SUBJECT USING(SUB_NO)
 WHERE SUB_PROF = '김태영' OR SUB_PROF = '김유석';
 
 --no17. 학생의 이름과 점수를 검색하라.
SELECT STU_NAME,ENR_GRADE
FROM STUDENT, ENROL, SUBJECT
WHERE STUDENT.STU_NO = ENROL.STU_NO AND ENROL.SUB_NO = SUBJECT.SUB_NO;
 
 --no18. 이름이 '옥한빛'인 학생이 수강하는 과목이름을 검색하라.
SELECT SUB_NAME
FROM STUDENT, ENROL, SUBJECT
WHERE STUDENT.STU_NO = ENROL.STU_NO AND ENROL.SUB_NO = SUBJECT.SUB_NO 
AND STUDENT.STU_NAME = '옥한빛';
 
--no19. 여학생이 수강중인 과목의 과목이름을 모두 검색하라.
SELECT SUB_NAME
FROM STUDENT, ENROL, SUBJECT
WHERE STUDENT.STU_NO = ENROL.STU_NO AND ENROL.SUB_NO = SUBJECT.SUB_NO 
AND STU_GENDER = 'F';
 
 --no20. 체중이 60이상인 학생이 수강하는 과목의 과목이름을 모두 검색하라.  
SELECT DISTINCT SUB_NAME
FROM STUDENT, ENROL, SUBJECT
WHERE STUDENT.STU_NO = ENROL.STU_NO AND ENROL.SUB_NO = SUBJECT.SUB_NO 
AND STU_WEIGHT >= 60;
 
 --no21. 컴퓨터정보과에 개설된 과목을 수강하는 모든 학생의 학번과 이름을 검색하라.
SELECT DISTINCT STUDENT.STU_NO, STU_NAME
FROM STUDENT, ENROL, SUBJECT
WHERE STUDENT.STU_NO = ENROL.STU_NO AND ENROL.SUB_NO = SUBJECT.SUB_NO 
AND SUB_DEPT = '컴퓨터정보';

 --no22. 점수가 70점 이상인 학생 수를 검색하라.
SELECT COUNT(DISTINCT STUDENT.STU_NO)
FROM STUDENT, ENROL, SUBJECT
WHERE STUDENT.STU_NO = ENROL.STU_NO  
AND ENR_GRADE >= 70;
 
 --no23. 여학생이면서, 구봉규 교수의 과목을 수강하는 학생의 이름을 검색하라.
SELECT STU_NAME
FROM STUDENT, ENROL, SUBJECT
WHERE STUDENT.STU_NO = ENROL.STU_NO AND ENROL.SUB_NO = SUBJECT.SUB_NO 
AND STU_GENDER = 'F' AND SUB_PROF = '구봉규';

 --no24. 김종헌 학생의 평균 점수보다 높은 점수를 가진 학생의 학번과 이름을 검색하라.
SELECT STUDENT.STU_NO, STU_NAME
FROM STUDENT, ENROL
WHERE STUDENT.STU_NO = ENROL.STU_NO 
AND ENR_GRADE > (SELECT AVG(ENR_GRADE)
                FROM STUDENT, ENROL
                WHERE STUDENT.STU_NO = ENROL.STU_NO AND STU_NAME = '김종헌');
                
 --no25. 김인중 학생의 평균점수보다 낮은 점수를 가진 학생의 학번과 이름을 검색하라.
SELECT DISTINCT STUDENT.STU_NO, STU_NAME
FROM STUDENT, ENROL
WHERE STUDENT.STU_NO = ENROL.STU_NO 
AND ENR_GRADE < (SELECT AVG(ENR_GRADE)
                FROM STUDENT, ENROL
                WHERE STUDENT.STU_NO = ENROL.STU_NO AND STU_NAME = '김인중');

 --no26. 전체 학생의 평균점수보다 점수가 높은 학생의 학번, 이름, 과목 이름, 점수를 검색하라?
SELECT STUDENT.STU_NO, STU_NAME, SUB_NAME, ENR_GRADE
FROM STUDENT, ENROL, SUBJECT
WHERE STUDENT.STU_NO = ENROL.STU_NO AND ENROL.SUB_NO = SUBJECT.SUB_NO
AND ENR_GRADE > (SELECT AVG(ENR_GRADE)
                FROM ENROL) ;

 --no.27. 점수가 각 학과 학생들의 평균점수보다 높은 학생의 학번을 검색하라?
SELECT STUDENT.STU_NO
FROM STUDENT, ENROL
WHERE STUDENT.STU_NO = ENROL.STU_NO 
AND ENR_GRADE > ALL(SELECT AVG(ENR_GRADE)
                FROM STUDENT, ENROL
                WHERE STUDENT.STU_NO = ENROL.STU_NO
                GROUP BY STU_DEPT) ;
 
 --no28. 기계과의 최고점수 학생보다 최고 점수가 높은 학과의 학과 명과 점수를 검색하라?
SELECT STU_DEPT,ENR_GRADE
FROM STUDENT, ENROL
WHERE STUDENT.STU_NO = ENROL.STU_NO AND ENR_GRADE > ( SELECT MAX(ENR_GRADE)
                                                FROM STUDENT, ENROL
                                                WHERE STUDENT.STU_NO = ENROL.STU_NO
                                                AND STU_DEPT = '기계');
                                                
--no.29. 컴퓨터정보과의 학생들 평균점수를 구해 학생들의 학번과 이름 평균점수를 성적순으로 검색하라?
SELECT STUDENT.STU_NO, STU_NAME, AVG(ENR_GRADE)
FROM STUDENT, ENROL
WHERE STUDENT.STU_NO = ENROL.STU_NO AND STU_DEPT = '컴퓨터정보'
GROUP BY STUDENT.STU_NO, STU_NAME
ORDER BY AVG(ENR_GRADE);

--no30. 시스템분석설계과목을 수강하는 학생들의 학번, 이름, 점수를 성적순으로 검색하라?
SELECT STUDENT.STU_NO, STU_NAME, ENR_GRADE
FROM STUDENT, ENROL, SUBJECT
WHERE STUDENT.STU_NO = ENROL.STU_NO AND ENROL.SUB_NO = SUBJECT.SUB_NO AND SUB_NAME = '시스템분석설계'
ORDER BY ENR_GRADE;

--no31. 2과목 이상 수강한 학생들의 학번, 이름, 수강과목수를 수강 과목이 많은 순으로 검색하라?
SELECT STUDENT.STU_NO, STU_NAME
FROM STUDENT, ENROL
WHERE STUDENT.STU_NO = ENROL.STU_NO
GROUP BY STUDENT.STU_NO, STU_NAME HAVING COUNT(ENROL.STU_NO) >= 2
ORDER BY COUNT(ENROL.STU_NO) DESC;

--no32. 1과목을 수강한 학생들의 학번 이름을 학과별 학번 순으로 검색하라?
SELECT STUDENT.STU_NO
FROM STUDENT, ENROL
WHERE STUDENT.STU_NO = ENROL.STU_NO
GROUP BY  STUDENT.STU_NO,STUDENT.STU_DEPT HAVING COUNT(ENROL.STU_NO) = 1
ORDER BY STUDENT.STU_NO;

--no33. 컴퓨터정보과 학생들 중 평균점수가 최고인 학생의 학번, 이름, 평균점수를 검색하라?
SELECT STUDENT.STU_NO,STU_NAME, AVG(ENR_GRADE)
FROM STUDENT, ENROL
WHERE STUDENT.STU_NO = ENROL.STU_NO
AND STU_DEPT = '컴퓨터정보'
AND ENR_GRADE = (SELECT MAX(AVG(ENR_GRADE))
                FROM STUDENT,ENROL
                WHERE STUDENT.STU_NO = ENROL.STU_NO
                GROUP BY STU_DEPT,STUDENT.STU_NO)
GROUP BY STUDENT.STU_NO, STU_NAME;

--no34. 컴퓨터개론과 시스템분석 설계 과목을 수강하는 학생의 학번, 이름을 학번 순으로 검색하라?
SELECT STUDENT.STU_NO, STU_NAME
FROM STUDENT, ENROL, SUBJECT
WHERE STUDENT.STU_NO = ENROL.STU_NO AND ENROL.SUB_NO = SUBJECT.SUB_NO
AND ENROL.SUB_NO = (SELECT SUB_NO
                 FROM SUBJECT
                 WHERE SUB_NAME = '컴퓨터개론' OR SUB_NAME = '시스템분석')
ORDER BY STUDENT.STU_NO;

 
 