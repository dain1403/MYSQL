-- SQL 명령어연습 2020-8-11

DESC ENROL;
DESC STUDENT;
DESC SUBJECT;

--테이블내의 모든정보검색?
SELECT * FROM STUDENT;
SELECT * FROM EM P;

--칼럼의 내용을 가져오는 방법
SELECT STU_NAME, STU_NO, STU_GENDER
FROM STUDENT;

-- 중복제거하는 방법
SELECT DISTINCT (STU_DEPT)
FROM STUDENT;

SELECT DISTINCT STU_CLASS,STU_DEPT
FROM STUDENT;

--수식을 포함한 검색
SELECT STU_NO, SUB_NO, ENR_GRADE, ENR_GRADE+10
FROM ENROL;

-- ALIAS 가능함  (AS 쓰는것 생략 가능)
SELECT STU_NO AS ID, STU_NAME AS NAME
FROM STUDENT;

--연결연산자 ||
SELECT STU_DEPT||STU_NAME||'입니다' AS 학과성명
FROM STUDENT;

-- 조건절 검색은 
-- 컴퓨터정보과 학생들의 데이터를 검색하라
SELECT *
FROM STUDENT
WHERE STU_DEPT = '컴퓨터정보';

SELECT *
FROM STUDENT
WHERE STU_DEPT = '컴퓨터정보' AND STU_GRADE = 2;

--범위조건
SELECT *
FROM STUDENT
WHERE STU_WEIGHT BETWEEN 60 AND 70;

SELECT *
FROM STUDENT
WHERE STU_NO = 20132003;

--LIKE를 이용한 조건검색
SELECT *
FROM STUDENT
WHERE STU_NAME LIKE '김%';
 
SELECT *
FROM STUDENT
WHERE STU_NAME LIKE '_수%';

--2014학번을 가진 학생 모두를 검색하라
SELECT *
FROM STUDENT
WHERE STU_NO LIKE '2014%';

-- NULL이 아닌 경우만 보기
SELECT * FROM STUDENT;
SELECT * FROM STUDENT
WHERE STU_HEIGHT IS NOT NULL;

-- IN (OR기능을 내포하고 있다)
-- 컴퓨터정보과나 기계과 학생들의 학번과 학생이름을 검색하라
SELECT STU_NO, STU_NAME
FROM STUDENT
WHERE STU_DEPT IN ('컴퓨터정보','기계');

-- 정렬을 위한 명령어
SELECT *
FROM STUDENT
ORDER BY STU_NO ASC;

SELECT *
FROM STUDENT
ORDER BY STU_NO DESC;

--학생테이블에서 학번, 이름, 몸무게를 5KG감하여 검색하라
SELECT STU_NO, STU_NAME, STU_WEIGHT - 5 AS TARGET
FROM STUDENT
ORDER BY TARGET;  -- ORDER BY 3이라고 써도됨. SELECT에서 3번째이니까

SELECT STU_NO, STU_NAME, STU_DEPT, STU_WEIGHT-5 AS TARGET
FROM STUDENT
ORDER BY STU_DEPT, TARGET dESC;

--함수
--단일행 함수
--숫자함수
SELECT ROUND(345.678),TRUNC(345.678), CEIL(-3.1), CEIL(3.1),FLOOR(-3.1), FLOOR(3.1)   -- 올림함수, 버림함수, CEIL : 큰쪽으로 
FROM DUAL;

SELECT MOD(10, 3),ABS(-100)  -- 나눈 나머지, 절대값
FROM DUAL;

SELECT ROUND(345.678, -1)
FROM DUAL;

--문자함수
SELECT LOWER('ABCDEFG'), UPPER('abcdefg'), INITCAP('ABCDEFG')
FROM DUAL;

SELECT CONCAT(ENAME,JOB)
FROM EMP;

SELECT ENAME, SUBSTR(ENAME, 2,2)  --SUBSTR(ENAME, 2,2) :  ENAME에서 2번째부터 2개의 글자
FROM EMP;

SELECT ENAME, LENGTH(ENAME)
FROM EMP;

SELECT LPAD(ENAME, 10, 'S')  -- 왼쪽공간을 S로 채우기
FROM EMP;

SELECT RPAD(ENAME, 10, 'S')  -- 오른쪽공간을 S로 채우기
FROM EMP;

--날짜함수
SELECT SYSDATE+1, MONTHS_BETWEEN(SYSDATE, HIREDATE)
FROM EMP;

SELECT NEXT_DAY(SYSDATE, '월'), LAST_DAY(SYSDATE) -- LAST_DAY : 이번달 마지막 날
FROM DUAL;

--변환함수
SELECT EMPNO, ENAME, TO_CHAR(HIREDATE, 'YYYY-MM-DD') AS 입사년월
FROM EMP;

SELECT TO_CHAR(TO_NUMBER(1234.5678), '9999.999')
FROM DUAL;

SELECT EMPNO, ENAME, TO_CHAR(TO_NUMBER(SAL),'$9999') SALARY
FROM EMP;

SELECT * FROM EMP;
--TO DATE는 날짜형태의 문자를 날짜로 변환할때 사용
SELECT EMPNO, ENAME
FROM EMP
WHERE HIREDATE = TO_DATE('1980-12-17','YY-MM-DD');

-- 일반함수
-- NVL(인수1, 인수2)
SELECT * FROM EMP;

SELECT ENAME, EMPNO, NVL(MGR, 0)  --  NVL(MGR, 0) : MGR이 NULL이면 0으로 바꿈
FROM EMP;

-- NVL(인수1, 인수2, 인수3)
SELECT ENAME, NVL2(COMM, SAL+COMM, SAL)
FROM EMP;

-- NULIF(인수1, 인수2)
SELECT NVL(NULLIF('A','A'),'널값') -- 인수1 = 인수2 이면 NULL 을 출력하고 아니라면 인수1의 값을 출력하는 함수
FROM DUAL;

--
SELECT EMPNO, ENAME, SAL,
CASE JOB WHEN 'SALESMAN' THEN SAL*1.1
         WHEN 'CLERK' THEN SAL*1.15
         WHEN 'MANAGER' THEN SAL*1.2
         ELSE SAL
         END AS 급여인상
         FROM EMP;

SELECT EMPNO, ENAME, JOB, SAL,
DECODE (JOB, 'SALESMAN', SAL*1.1,
            'CLERK', SAL*1.15,
            'MANAGER', SAL*1.2,
            SAL) AS 인상된급여
            FROM EMP;



